/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei/'
import { useSpring, a} from 'react-spring/three'

// Chest sound
import ChestOpenSound from "../../assets/sound/open-chest.mp3"
import ChestCloseSound from "../../assets/sound/close-chest.mp3"
const openChest = new Audio(ChestOpenSound);
const closeChest = new Audio(ChestCloseSound);

export default function Model({ ...props }) {
  const group = useRef()
  const { nodes, materials } = useGLTF('../../../coffre-minecraft.glb')

  // Open Function
  const handleOpen = () => {
    props.setOpen(!props.open);
    openChest.volume = 0.3;
    closeChest.volume = 0.3;
    props.open ? closeChest.play() : openChest.play();
  }

  // Animation
  /*
  useSpring is a custom hook that we can set our style to, it takes an object with the
  from and to values as the start and end states while react-spring handles the transition
  between them. from and to can take objects of almost every css property: 
  color, size, transform, and even our scrollbar.
  */
  const openChestAnimation = useSpring({
    rotation: props.open ? [0,0,0] : [1.61, 0, 0],
    position: props.open ? [0, -1.5, 0] : [0, 0, 0]
  })

  return (
    <group onClick={handleOpen} ref={group} {...props} dispose={null}>
      <a.group rotation = {openChestAnimation.position} name="Armature" position={[0, -0.99, 0]}>
        <primitive object={nodes.Bone} />
        {/* top half of chest - animated div with a */}
        <a.primitive 
          object={nodes.Bone001}
          rotation={openChestAnimation.rotation} />
        <skinnedMesh 
          castShadow
          receiveShadow
          geometry={nodes.Cube.geometry}
          material={materials.Material}
          skeleton={nodes.Cube.skeleton} />
      </a.group>
    </group>
  )
}

useGLTF.preload('../../../coffre-minecraft.glb')
